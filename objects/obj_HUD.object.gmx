<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>compass_x = 616;
compass_y = 636;
lng_x = 790;
lng_min_y = 738;
lng_max_y = 538;
spd_x = 870;
spd_min_y = 738;
spd_max_y = 538;
eff_x = 970;
eff_min_y = 738;
eff_max_y = 538;
hgt = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(s_arrow2, -1, compass_x, compass_y, 1, 1, obj_ship.image_angle - 90, c_white, 1);
draw_sprite_ext(s_arrow1, -1, compass_x, compass_y, 1, 1, point_direction(obj_ship.x, 
    obj_ship.y, obj_great_ship.x, obj_great_ship.y) - 90, c_white, 1);
draw_sprite_ext(s_arrow3, -1, compass_x, compass_y, 1, 1, obj_ship.direction - 90, c_white, 1);
var max_speed;
max_speed = sqrt(obj_ship.fly_power / obj_ship.mass / obj_ship.friction_k / obj_ship.shell_streamlining);
draw_sprite(s_arrow4, -1, lng_x, lng_min_y - hgt * (obj_ship.speed / max_speed));
draw_sprite(s_arrow4, -1, spd_x, spd_min_y - hgt * (point_distance(obj_ship.x, 
    obj_ship.y, obj_great_ship.x, obj_great_ship.y) / obj_ship.gravitation_max_radius));
/*var max_airresistance, real_airresistance;
max_airresistance = obj_ship.fly_power / obj_ship.mass;
real_airresistance = obj_ship.speed * obj_ship.friction_k * obj_ship.shell_streamlining;
draw_sprite(s_arrow4, -1, eff_x, eff_min_y - hgt * (real_airresistance / max_airresistance));*/
draw_sprite(s_HUD, -1, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
