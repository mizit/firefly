<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-25</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(s_mask, -1, 0, 0);
draw_set_color(c_black);
draw_text(30, 723, keyboard_string);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var command = "";
for (i = 1; i &lt; string_length(keyboard_string) + 1; i++)
{
    if (string_char_at(keyboard_string, i) != ' ')
    {
        command += string_char_at(keyboard_string, i);
    }
    else
    {
        break;
    }
}
var arg;
for (j = 0; j &lt; 8; j++)
{
    arg[j] = "";
}
j = 0;
for (; i &lt; string_length(keyboard_string) + 1; i++)
{
    if (string_char_at(keyboard_string, i) != ' ')
    {
        arg[j] += string_char_at(keyboard_string, i);
    }
    else
    {
        j++;
    }
}
switch command
{
    case "fly":
    {
        obj_ship.fly_start = 1;
        obj_ship.fly_percent = real(arg[1]); 
        obj_ship.fly_time = real(arg[2]) * room_speed;
        break;
    }
    case "rotate":
    {
        obj_ship.rotate_start = 1;
        obj_ship.rotate_goal = real(arg[1]);
        break;
    }
    default:
    {
        break;
    }
}
keyboard_string = "";
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
